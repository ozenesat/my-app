{"version":3,"sources":["components/button.js","components/Home.js","App.js","index.js"],"names":["Button","styled","button","Home","useState","city","state","country","weather","setWeather","handleChange","event","persist","target","name","value","main","temp","humidity","feels_like","result","setResult","resultStyle","backgroundColor","color","border","textAlign","Container","style","fontSize","padding","Row","background","backgroundSize","height","alignItems","justifyContent","borderColor","borderWidth","borderRadius","Col","xs","md","Image","src","fluid","className","Form","onSubmit","api","preventDefault","axios","get","then","res","data","catch","error","console","log","Group","controlId","Label","Control","required","placeholder","onChange","variant","type","ListGroup","Item","withRouter","props","exact","path","component","appJsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a22ff61e.chunk.js","sourcesContent":["// import react from 'react'\n// import Button from 'react-bootstrap/Button'\nimport styled from 'styled-components'\n// Code Along: Replace with styled components button\nconst Button = styled.button`\n  border-color: rgba(0,212,255,1);\n  border-width: 7px;\n  border-radius: 30px;\n\n  background-color: rgba(1,101,156,1);\n  color: white;\n\n  font-size: 1rem;\n  padding: 0.5rem 1rem;\n\n  transition: color .7s linear, background-color .7s linear;\n\n  &:hover {\n    background-color: transparent ;\n    border-color: rgba(1,101,156,1);\n    color: yellow;\n    transition: color .7s linear, background-color .7s linear;\n  }\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from './button'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nimport axios from 'axios'\n\nconst Home = () => {\n\n  const [weather, setWeather] = useState({ city: '', state: '', country: '' })\n\n  const handleChange = event => {\n    event.persist()\n    setWeather(weather => ({ ...weather, [event.target.name]: event.target.value }))\n  }\n\n  const [result, setResult] = useState({\n    main: {\n      temp: '',\n      humidity: '',\n      feels_like: ''\n    },\n    name: ''\n  })\n\n  const handleSubmit = event => {\n    const api = {\n      url: \"https://api.openweathermap.org/data/2.5/\",\n      key: \"1a1715229f610f4b01ce2654fbf4a6f7\"\n    }\n    event.preventDefault()\n    axios.get(`${api.url}weather?q=${weather.city},${weather.country}&units=metric&APPID=${api.key}`)\n      .then(res => setResult( res.data ))\n      .catch(error => {\n        console.log(error);\n      }, [])\n  }\n\n  const homeStyle = {\n    background: 'linear-gradient(90deg, rgba(7,62,156,1) 52%, rgba(0,212,255,1) 100%)',\n    backgroundSize: 'Cover',\n    height: '100vh',\n    alignItems: 'center',\n    color: 'white',\n    textAlign: 'center',\n    justifyContent: 'center',\n    borderColor: 'red',\n    borderWidth: '2rem',\n    borderRadius: '20rem'\n  }\n  const h1Style = {\n    textAlign:'center',\n    fontSize: '3rem',\n    padding: '3rem'\n  }\n\n  const resultStyle = {\n    backgroundColor: 'transparent',\n    color: 'white',\n    border: '0',\n    textAlign: 'left'\n  }\n  return (\n    <div>\n\n    <Container>\n    <h1 style={h1Style}> Weather App </h1>\n    <Row style={homeStyle}>\n        <Col xs={6} md={4}>\n          <Image src=\"./eee.jpeg\" style={{borderRadius: '20rem'}} fluid/>\n        </Col>\n      <div>\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"city\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                required\n                placeholder=\"City\"\n                name=\"city\"\n                value = {weather.city}\n                onChange = {handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"country\">\n              <Form.Label>State</Form.Label>\n              <Form.Control\n                placeholder=\"State\"\n                name=\"state\"\n                value ={weather.state}\n                onChange = {handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"Country\">\n              <Form.Label>Country</Form.Label>\n              <Form.Control\n                required\n                placeholder=\"Country\"\n                name=\"country\"\n                value ={weather.country}\n                onChange = {handleChange}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n            >\n            Get Weather\n            </Button>\n          </Form>\n        </div>\n      </div>\n      <ListGroup>\n        <ListGroup.Item style={resultStyle}>Location: {result.name} </ListGroup.Item>\n        <ListGroup.Item style={resultStyle}>Temperature: {result.main.temp} °C</ListGroup.Item>\n        <ListGroup.Item style={resultStyle}>Humidity: {result.main.humidity}</ListGroup.Item>\n        <ListGroup.Item style={resultStyle}>Feels like:{result.main.feels_like} °C</ListGroup.Item>\n      </ListGroup>\n    </Row>\n    </Container>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { Fragment } from 'react'\nimport { Route, withRouter } from 'react-router-dom'\n// import logo from './logo.svg';\n// import './App.css'\nimport Home from './components/Home'\n\nconst App = props => {\n  return (\n    <Fragment>\n      <Route exact path='/' component={Home} />\n    </Fragment>\n  )\n}\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import './css/index.scss'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\nimport { HashRouter } from 'react-router-dom'\nconst appJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n)\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}